/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package user.profile.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the UserProfile service. Represents a row in the &quot;UserProfile_UserProfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link user.profile.model.impl.UserProfileModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link user.profile.model.impl.UserProfileImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserProfile
 * @see user.profile.model.impl.UserProfileImpl
 * @see user.profile.model.impl.UserProfileModelImpl
 * @generated
 */
@ProviderType
public interface UserProfileModel extends BaseModel<UserProfile> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user profile model instance should use the {@link UserProfile} interface instead.
	 */

	/**
	 * Returns the primary key of this user profile.
	 *
	 * @return the primary key of this user profile
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this user profile.
	 *
	 * @param primaryKey the primary key of this user profile
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the uuid of this user profile.
	 *
	 * @return the uuid of this user profile
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this user profile.
	 *
	 * @param uuid the uuid of this user profile
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the user ID of this user profile.
	 *
	 * @return the user ID of this user profile
	 */
	@AutoEscape
	public String getUserId();

	/**
	 * Sets the user ID of this user profile.
	 *
	 * @param userId the user ID of this user profile
	 */
	public void setUserId(String userId);

	/**
	 * Returns the anverso ID of this user profile.
	 *
	 * @return the anverso ID of this user profile
	 */
	@AutoEscape
	public String getAnversoId();

	/**
	 * Sets the anverso ID of this user profile.
	 *
	 * @param anversoId the anverso ID of this user profile
	 */
	public void setAnversoId(String anversoId);

	/**
	 * Returns the reverso ID of this user profile.
	 *
	 * @return the reverso ID of this user profile
	 */
	@AutoEscape
	public String getReversoId();

	/**
	 * Sets the reverso ID of this user profile.
	 *
	 * @param reversoId the reverso ID of this user profile
	 */
	public void setReversoId(String reversoId);

	/**
	 * Returns the selfie of this user profile.
	 *
	 * @return the selfie of this user profile
	 */
	@AutoEscape
	public String getSelfie();

	/**
	 * Sets the selfie of this user profile.
	 *
	 * @param selfie the selfie of this user profile
	 */
	public void setSelfie(String selfie);

	/**
	 * Returns the proof address of this user profile.
	 *
	 * @return the proof address of this user profile
	 */
	@AutoEscape
	public String getProofAddress();

	/**
	 * Sets the proof address of this user profile.
	 *
	 * @param proofAddress the proof address of this user profile
	 */
	public void setProofAddress(String proofAddress);

	/**
	 * Returns the id type of this user profile.
	 *
	 * @return the id type of this user profile
	 */
	@AutoEscape
	public String getIdType();

	/**
	 * Sets the id type of this user profile.
	 *
	 * @param idType the id type of this user profile
	 */
	public void setIdType(String idType);

	/**
	 * Returns the id number of this user profile.
	 *
	 * @return the id number of this user profile
	 */
	@AutoEscape
	public String getIdNumber();

	/**
	 * Sets the id number of this user profile.
	 *
	 * @param idNumber the id number of this user profile
	 */
	public void setIdNumber(String idNumber);

	/**
	 * Returns the country of this user profile.
	 *
	 * @return the country of this user profile
	 */
	@AutoEscape
	public String getCountry();

	/**
	 * Sets the country of this user profile.
	 *
	 * @param country the country of this user profile
	 */
	public void setCountry(String country);

	/**
	 * Returns the prov of this user profile.
	 *
	 * @return the prov of this user profile
	 */
	@AutoEscape
	public String getProv();

	/**
	 * Sets the prov of this user profile.
	 *
	 * @param prov the prov of this user profile
	 */
	public void setProv(String prov);

	/**
	 * Returns the city of this user profile.
	 *
	 * @return the city of this user profile
	 */
	@AutoEscape
	public String getCity();

	/**
	 * Sets the city of this user profile.
	 *
	 * @param city the city of this user profile
	 */
	public void setCity(String city);

	/**
	 * Returns the street1 of this user profile.
	 *
	 * @return the street1 of this user profile
	 */
	@AutoEscape
	public String getStreet1();

	/**
	 * Sets the street1 of this user profile.
	 *
	 * @param street1 the street1 of this user profile
	 */
	public void setStreet1(String street1);

	/**
	 * Returns the street2 of this user profile.
	 *
	 * @return the street2 of this user profile
	 */
	@AutoEscape
	public String getStreet2();

	/**
	 * Sets the street2 of this user profile.
	 *
	 * @param street2 the street2 of this user profile
	 */
	public void setStreet2(String street2);

	/**
	 * Returns the home number of this user profile.
	 *
	 * @return the home number of this user profile
	 */
	@AutoEscape
	public String getHomeNumber();

	/**
	 * Sets the home number of this user profile.
	 *
	 * @param homeNumber the home number of this user profile
	 */
	public void setHomeNumber(String homeNumber);

	/**
	 * Returns the postal code of this user profile.
	 *
	 * @return the postal code of this user profile
	 */
	@AutoEscape
	public String getPostalCode();

	/**
	 * Sets the postal code of this user profile.
	 *
	 * @param postalCode the postal code of this user profile
	 */
	public void setPostalCode(String postalCode);

	/**
	 * Returns the approved of this user profile.
	 *
	 * @return the approved of this user profile
	 */
	public Boolean getApproved();

	/**
	 * Sets the approved of this user profile.
	 *
	 * @param approved the approved of this user profile
	 */
	public void setApproved(Boolean approved);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(user.profile.model.UserProfile userProfile);

	@Override
	public int hashCode();

	@Override
	public CacheModel<user.profile.model.UserProfile> toCacheModel();

	@Override
	public user.profile.model.UserProfile toEscapedModel();

	@Override
	public user.profile.model.UserProfile toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}