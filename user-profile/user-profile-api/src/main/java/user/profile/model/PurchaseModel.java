/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package user.profile.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import user.profile.service.persistence.PurchasePK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Purchase service. Represents a row in the &quot;UserProfile_Purchase&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link user.profile.model.impl.PurchaseModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link user.profile.model.impl.PurchaseImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Purchase
 * @see user.profile.model.impl.PurchaseImpl
 * @see user.profile.model.impl.PurchaseModelImpl
 * @generated
 */
@ProviderType
public interface PurchaseModel extends BaseModel<Purchase> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a purchase model instance should use the {@link Purchase} interface instead.
	 */

	/**
	 * Returns the primary key of this purchase.
	 *
	 * @return the primary key of this purchase
	 */
	public PurchasePK getPrimaryKey();

	/**
	 * Sets the primary key of this purchase.
	 *
	 * @param primaryKey the primary key of this purchase
	 */
	public void setPrimaryKey(PurchasePK primaryKey);

	/**
	 * Returns the uuid of this purchase.
	 *
	 * @return the uuid of this purchase
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this purchase.
	 *
	 * @param uuid the uuid of this purchase
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the screenname of this purchase.
	 *
	 * @return the screenname of this purchase
	 */
	@AutoEscape
	public String getScreenname();

	/**
	 * Sets the screenname of this purchase.
	 *
	 * @param screenname the screenname of this purchase
	 */
	public void setScreenname(String screenname);

	/**
	 * Returns the hash of this purchase.
	 *
	 * @return the hash of this purchase
	 */
	@AutoEscape
	public String getHash();

	/**
	 * Sets the hash of this purchase.
	 *
	 * @param hash the hash of this purchase
	 */
	public void setHash(String hash);

	/**
	 * Returns the date_time of this purchase.
	 *
	 * @return the date_time of this purchase
	 */
	public Date getDate_time();

	/**
	 * Sets the date_time of this purchase.
	 *
	 * @param date_time the date_time of this purchase
	 */
	public void setDate_time(Date date_time);

	/**
	 * Returns the curr_from of this purchase.
	 *
	 * @return the curr_from of this purchase
	 */
	@AutoEscape
	public String getCurr_from();

	/**
	 * Sets the curr_from of this purchase.
	 *
	 * @param curr_from the curr_from of this purchase
	 */
	public void setCurr_from(String curr_from);

	/**
	 * Returns the value_from of this purchase.
	 *
	 * @return the value_from of this purchase
	 */
	@AutoEscape
	public String getValue_from();

	/**
	 * Sets the value_from of this purchase.
	 *
	 * @param value_from the value_from of this purchase
	 */
	public void setValue_from(String value_from);

	/**
	 * Returns the curr_to of this purchase.
	 *
	 * @return the curr_to of this purchase
	 */
	@AutoEscape
	public String getCurr_to();

	/**
	 * Sets the curr_to of this purchase.
	 *
	 * @param curr_to the curr_to of this purchase
	 */
	public void setCurr_to(String curr_to);

	/**
	 * Returns the value_to of this purchase.
	 *
	 * @return the value_to of this purchase
	 */
	@AutoEscape
	public String getValue_to();

	/**
	 * Sets the value_to of this purchase.
	 *
	 * @param value_to the value_to of this purchase
	 */
	public void setValue_to(String value_to);

	/**
	 * Returns the status of this purchase.
	 *
	 * @return the status of this purchase
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this purchase.
	 *
	 * @param status the status of this purchase
	 */
	public void setStatus(String status);

	/**
	 * Returns the ewallet of this purchase.
	 *
	 * @return the ewallet of this purchase
	 */
	@AutoEscape
	public String getEwallet();

	/**
	 * Sets the ewallet of this purchase.
	 *
	 * @param ewallet the ewallet of this purchase
	 */
	public void setEwallet(String ewallet);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(user.profile.model.Purchase purchase);

	@Override
	public int hashCode();

	@Override
	public CacheModel<user.profile.model.Purchase> toCacheModel();

	@Override
	public user.profile.model.Purchase toEscapedModel();

	@Override
	public user.profile.model.Purchase toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}