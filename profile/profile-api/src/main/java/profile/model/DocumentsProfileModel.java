/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package profile.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the DocumentsProfile service. Represents a row in the &quot;DocumentsProfile_DocumentsProfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link profile.model.impl.DocumentsProfileModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link profile.model.impl.DocumentsProfileImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DocumentsProfile
 * @see profile.model.impl.DocumentsProfileImpl
 * @see profile.model.impl.DocumentsProfileModelImpl
 * @generated
 */
@ProviderType
public interface DocumentsProfileModel extends BaseModel<DocumentsProfile> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a documents profile model instance should use the {@link DocumentsProfile} interface instead.
	 */

	/**
	 * Returns the primary key of this documents profile.
	 *
	 * @return the primary key of this documents profile
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this documents profile.
	 *
	 * @param primaryKey the primary key of this documents profile
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the uuid of this documents profile.
	 *
	 * @return the uuid of this documents profile
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this documents profile.
	 *
	 * @param uuid the uuid of this documents profile
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the user ID of this documents profile.
	 *
	 * @return the user ID of this documents profile
	 */
	@AutoEscape
	public String getUserId();

	/**
	 * Sets the user ID of this documents profile.
	 *
	 * @param userId the user ID of this documents profile
	 */
	public void setUserId(String userId);

	/**
	 * Returns the anverso ID of this documents profile.
	 *
	 * @return the anverso ID of this documents profile
	 */
	@AutoEscape
	public String getAnversoId();

	/**
	 * Sets the anverso ID of this documents profile.
	 *
	 * @param anversoId the anverso ID of this documents profile
	 */
	public void setAnversoId(String anversoId);

	/**
	 * Returns the reverso ID of this documents profile.
	 *
	 * @return the reverso ID of this documents profile
	 */
	@AutoEscape
	public String getReversoId();

	/**
	 * Sets the reverso ID of this documents profile.
	 *
	 * @param reversoId the reverso ID of this documents profile
	 */
	public void setReversoId(String reversoId);

	/**
	 * Returns the selfie of this documents profile.
	 *
	 * @return the selfie of this documents profile
	 */
	@AutoEscape
	public String getSelfie();

	/**
	 * Sets the selfie of this documents profile.
	 *
	 * @param selfie the selfie of this documents profile
	 */
	public void setSelfie(String selfie);

	/**
	 * Returns the proof address of this documents profile.
	 *
	 * @return the proof address of this documents profile
	 */
	@AutoEscape
	public String getProofAddress();

	/**
	 * Sets the proof address of this documents profile.
	 *
	 * @param proofAddress the proof address of this documents profile
	 */
	public void setProofAddress(String proofAddress);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(profile.model.DocumentsProfile documentsProfile);

	@Override
	public int hashCode();

	@Override
	public CacheModel<profile.model.DocumentsProfile> toCacheModel();

	@Override
	public profile.model.DocumentsProfile toEscapedModel();

	@Override
	public profile.model.DocumentsProfile toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}